{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "String",
            "maxLength": 3,
            "minLength": 2,
            "metadata": {
                "description": "Unique string to be used in Azure resource names"
            }
        },
        "environment": {
            "allowedValues": [
                "dev",
                "test",
                "prod"
            ],
            "defaultValue": "dev",
            "type": "string",
            "metadata": {
                "description": "Environment name used for Azure resource names"
            }
        },
        "password": {
            "type": "string",
            "defaultValue": "[concat('A', uniqueString(utcNow()), '!')]",
            "metadata": {
                "description": "Administrator password for the database"
            }
        },
        "username": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]"
        }
    },
    "variables": {
        "resourceName": "[concat('web', '-', 'demo', '-', parameters('resourceName'), '-', parameters('environment'))]",
        "storageName": "[replace(variables('resourceName'), '-', '')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('resourceName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "F1"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('resourceName')]",
            "location": "[resourceGroup().location]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]",
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('resourceName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]",
                "siteConfig": {
                    "linuxFxVersion": "python|3.8",
                    "appSettings": [
                        {
                            "name": "DBHOST",
                            "value": "[variables('resourceName')]"
                        },
                        {
                            "name": "DBNAME",
                            "value": "postgres"
                        },
                        {
                            "name": "DBUSER",
                            "value": "[concat(parameters('username'), '@', variables('resourceName'))]"
                        },
                        {
                            "name": "DBPASS",
                            "value": "[parameters('password')]"
                        },
                        {
                            "name": "AZURE_STORAGE_ACCOUNT_NAME",
                            "value": "[variables('storageName')]"
                        },
                        {
                            "name": "AZURE_STORAGE_ACCOUNT_KEY",
                            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2019-04-01').keys[0].value]"
                        },
                        {
                            "name": "POST_BUILD_COMMAND",
                            "value": "python manage.py makemigrations && python manage.py migrate"
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', 'media')]",
                    "dependsOn": [
                        "[variables('storageName')]"
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', 'static')]",
                    "dependsOn": [
                        "[variables('storageName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('resourceName')]",
            "properties": {
                "createMode": "Default",
                "version": "11",
                "administratorLogin": "[parameters('username')]",
                "administratorLoginPassword": "[parameters('password')]",
                "storageMB": "5120"
            },
            "sku": {
                "name": "B_Gen5_1",
                "tier": "Basic",
                "capacity": 1,
                "size": "5120",
                "family": "Gen5"
            },
            "resources": [
                {
                    "type": "firewallrules",
                    "apiVersion": "2017-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('resourceName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "[concat(variables('resourceName'),'firewall')]",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                },
                {
                    "name": "postgres",
                    "type": "databases",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "charset": "utf8",
                        "collation": "English_United States.1252"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('resourceName'))]"
                    ]
                }
            ]
        }
    ],
    "outputs": {
        "appName": {
            "type": "string",
            "value": "[variables('resourceName')]"
        }
    }
}
