{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "defaultValue": "ral-demo-aks",
            "type": "string"
        },
        "certificatePassword": {
            "type": "securestring"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[parameters('clusterName')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(parameters('clusterName'))]",
            "dependsOn": [
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('clusterName'))).principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('clusterName')]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "tags": {},
            "scale": null,
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('clusterName'))).principalId]",
                        "permissions": {
                            "secrets": [
                                "get"
                            ]
                        }
                    }
                ],
                "enabledForTemplateDeployment": true
            },
            "resources": []
        },
        {
            "comments": "VNET for AKS",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('clusterName')]",
            "apiVersion": "2020-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/8"
                    ]
                },
                "subnets": [
                    {
                        "name": "aks",
                        "properties": {
                            "addressPrefix": "10.240.0.0/16",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "agw",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24"
                        }
                    },
                    {
                        "name": "api",
                        "properties": {
                            "addressPrefix": "10.2.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2020-03-01",
            "name": "[parameters('clusterName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('clusterName'))]",
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
            "properties": {
                "kubernetesVersion": "1.18.14",
                "dnsPrefix": "[concat(parameters('clusterName'), '-dns')]",
                "nodeResourceGroup": "[concat(resourceGroup().name, '-kubernetes')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": 3,
                        "vmSize": "Standard_DS2_v2",
                        "osDiskSizeGB": 128,
                        "osDiskType": "Managed",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('clusterName'), 'aks')]",
                        "maxPods": 110,
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "orchestratorVersion": "1.18.14",
                        "nodeLabels": {},
                        "mode": "System",
                        "osType": "Linux"
                    }
                ],
                "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                        "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]": {}
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "[reference(resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))).clientId]"
                },
                "enableRBAC": true,
                "aadProfile": {
                    "managed": true,
                    "adminGroupObjectIDs": [
                        "15b47338-d6b9-491a-8000-50122b827f12"
                    ],
                    "tenantID": "d7e206d8-9e64-471a-a2f9-df5fb17cf9ba"
                },
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "loadBalancerSku": "Standard"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": true
                },
                "addonProfiles": {
                    "KubeDashboard": {
                        "enabled": false
                    },
                    "azurepolicy": {
                        "enabled": true,
                        "config": {
                            "version": "v2"
                        }
                    }
                }
            },
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2020-06-01-preview",
            "name": "[parameters('clusterName')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('clusterName'))]",
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]": {}
                }
            },
            "properties": {
                "publisherEmail": "rob@example.org",
                "publisherName": "Contoso",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('clusterName'), 'api')]"
                },
                "virtualNetworkType": "Internal"
            }
        },
        {
            "comments": "Nested template to setup hostname configurations after Key Vault secret and APIM have been created",
            "apiVersion": "2017-05-10",
            "name": "apiManagementConfigurations",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('clusterName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('clusterName'))]",
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "properties": {
                "mode": "incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "clusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "vnetId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterName'))]"
                    },
                    "principalId": {
                        "value": "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
                    },
                    "clientId": {
                        "value": "[reference(resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))).clientId]"
                    },
                    "certificatePassword": {
                        "value": "[parameters('certificatePassword')]"
                    },
                    "certificateUri": {
                        "value": "[concat(reference(resourceId('Microsoft.KeyVault/vaults', parameters('clusterName'))).vaultUri, 'secrets/pfxCertificate')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "clusterName": {
                            "type": "string"
                        },
                        "vnetId": {
                            "type": "string"
                        },
                        "principalId": {
                            "type": "string"
                        },
                        "clientId": {
                            "type": "string"
                        },
                        "certificatePassword": {
                            "type": "string"
                        },
                        "certificateUri": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ApiManagement/service",
                            "apiVersion": "2020-06-01-preview",
                            "name": "[parameters('clusterName')]",
                            "location": "East US 2",
                            "sku": {
                                "name": "Developer",
                                "capacity": 1
                            },
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[parameters('principalId')]": {}
                                }
                            },
                            "properties": {
                                "publisherEmail": "rob@example.org",
                                "publisherName": "Contoso",
                                "virtualNetworkConfiguration": {
                                    "subnetResourceId": "[concat(parameters('vnetId'), '/subnets/api')]"
                                },
                                "virtualNetworkType": "Internal",
                                "hostnameConfigurations": [
                                    {
                                        "type": "Proxy",
                                        "hostName": "[concat(parameters('clusterName'), '.azure-api.net')]",
                                        "negotiateClientCertificate": false,
                                        "defaultSslBinding": false
                                    },
                                    {
                                        "type": "DeveloperPortal",
                                        "hostName": "api-developer.lacher.io",
                                        "negotiateClientCertificate": false,
                                        "defaultSslBinding": false,
                                        "keyVaultId": "[parameters('certificateUri')]",
                                        "certificatePassword": "[parameters('certificatePassword')]",
                                        "identityClientId": "[parameters('clientId')]"
                                    },
                                    {
                                        "type": "Proxy",
                                        "hostName": "api.lacher.io",
                                        "negotiateClientCertificate": false,
                                        "defaultSslBinding": true,
                                        "keyVaultId": "[parameters('certificateUri')]",
                                        "certificatePassword": "[parameters('certificatePassword')]",
                                        "identityClientId": "[parameters('clientId')]"
                                    },
                                    {
                                        "type": "Management",
                                        "hostName": "api-management.lacher.io",
                                        "negotiateClientCertificate": false,
                                        "defaultSslBinding": false,
                                        "keyVaultId": "[parameters('certificateUri')]",
                                        "certificatePassword": "[parameters('certificatePassword')]",
                                        "identityClientId": "[parameters('clientId')]"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('clusterName')]",
            "location": "eastus2",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('clusterName')]",
                    "fqdn": "[concat(parameters('clusterName'), '.eastus2.cloudapp.azure.com')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-05-01",
            "name": "[parameters('clusterName')]",
            "location": "eastus2",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('clusterName'))]",
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('clusterName'))]",
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('clusterName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('clusterName'), 'agw')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "certificate",
                        "properties": {
                            "keyVaultSecretId": "[concat(reference(resourceId('Microsoft.KeyVault/vaults', parameters('clusterName'))).vaultUri, 'secrets/pfxCertificate')]"
                        }
                    }
                ],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('clusterName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "apim",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('clusterName')).properties.privateIpAddresses[0])]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "portal",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Enabled",
                            "hostName": "api-developer.lacher.io",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 180,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/probes/portal')]"
                            }
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "hostName": "api.lacher.io",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 180,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/probes/gateway')]"
                            }
                        }
                    },
                    {
                        "name": "management",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Enabled",
                            "hostName": "api-management.lacher.io",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/probes/management')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "management",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/sslCertificates/certificate')]"
                            },
                            "hostName": "api-management.lacher.io",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "portal",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/sslCertificates/certificate')]"
                            },
                            "hostName": "api-developer.lacher.io",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/sslCertificates/certificate')]"
                            },
                            "hostName": "api.lacher.io",
                            "hostNames": [],
                            "requireServerNameIndication": true
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "portal",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/httpListeners/portal')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendAddressPools/apim')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendHttpSettingsCollection/portal')]"
                            }
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/httpListeners/gateway')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendAddressPools/apim')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendHttpSettingsCollection/gateway')]"
                            }
                        }
                    },
                    {
                        "name": "management",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/httpListeners/management')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendAddressPools/apim')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('clusterName')), '/backendHttpSettingsCollection/management')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "gateway",
                        "properties": {
                            "protocol": "Https",
                            "host": "api.lacher.io",
                            "path": "/status-0123456789abcdef",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    },
                    {
                        "name": "portal",
                        "properties": {
                            "protocol": "Https",
                            "host": "api-developer.lacher.io",
                            "path": "/internal-status-0123456789abcdef",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    },
                    {
                        "name": "management",
                        "properties": {
                            "protocol": "Https",
                            "host": "api-management.lacher.io",
                            "path": "/servicestatus",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {}
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "webApplicationFirewallConfiguration": {
                    "enabled": false,
                    "firewallMode": "Detection",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0"
                },
                "enableHttp2": true
            }
        }
    ]
}
